function drawfield(map,axis,axis2,cmap,maxrate,varargin)

if nargin>5
    binWidth = varargin{1};
end

maxrate = ceil(maxrate);
if maxrate < 1
    maxrate = 1;
end    
[n,m] = size(map);
plotmap = ones(n,m,3);
for ii = 1:n
   for jj = 1:m
      if isnan(map(ii,jj))
        plotmap(n-ii+1,jj,1) = 1; % give the unvisited bins a gray colour
        plotmap(n-ii+1,jj,2) = 1;
        plotmap(n-ii+1,jj,3) = 1;
      else
        rgb = pixelcolour(map(ii,jj),maxrate,cmap);
        plotmap(n-ii+1,jj,1) = rgb(1);
        plotmap(n-ii+1,jj,2) = rgb(2);
        plotmap(n-ii+1,jj,3) = rgb(3);
      end   
   end
end   
image(axis,axis2,plotmap);
set(gca,'YDir','Normal');
s = sprintf('%s%u%s%2.1f','Peak ',maxrate,' Hz');
title(s,'FontSize',8);


function rgb = pixelcolour(map,maxrate,cmap)
cmap1 = ...
    [    0         0    0.5625; ...
         0         0    0.6875; ...
         0         0    0.8125; ...
         0         0    0.9375; ...
         0    0.0625    1.0000; ...
         0    0.1875    1.0000; ...
         0    0.3125    1.0000; ...
         0    0.4375    1.0000; ...
         0    0.5625    1.0000; ...
         0    0.6875    1.0000; ...
         0    0.8125    1.0000; ...
         0    0.9375    1.0000; ...
    0.0625    1.0000    1.0000; ...
    0.1875    1.0000    0.8750; ...
    0.3125    1.0000    0.7500; ...
    0.4375    1.0000    0.6250; ...
    0.5625    1.0000    0.5000; ...
    0.6875    1.0000    0.3750; ...
    0.8125    1.0000    0.2500; ...
    0.9375    1.0000    0.1250; ...
    1.0000    1.0000         0; ...
    1.0000    0.8750         0; ...
    1.0000    0.7500         0; ...
    1.0000    0.6250         0; ...
    1.0000    0.5000         0; ...
    1.0000    0.3750         0; ...
    1.0000    0.2500         0; ...
    1.0000    0.1250         0; ...
    1.0000         0         0; ...
    0.8750         0         0; ...
    0.7500         0         0; ...
    0.6250         0         0];

cmap2 = ...
   [0.0417         0         0; ...
    0.1250         0         0; ...
    0.2083         0         0; ...
    0.2917         0         0; ...
    0.3750         0         0; ...
    0.4583         0         0; ...
    0.5417         0         0; ...
    0.6250         0         0; ...
    0.7083         0         0; ...
    0.7917         0         0; ...
    0.8750         0         0; ...
    0.9583         0         0; ...
    1.0000    0.0417         0; ...
    1.0000    0.1250         0; ...
    1.0000    0.2083         0; ...
    1.0000    0.2917         0; ...
    1.0000    0.3750         0; ...
    1.0000    0.4583         0; ...
    1.0000    0.5417         0; ...
    1.0000    0.6250         0; ...
    1.0000    0.7083         0; ...
    1.0000    0.7917         0; ...
    1.0000    0.8750         0; ...
    1.0000    0.9583         0; ...
    1.0000    1.0000    0.0625; ...
    1.0000    1.0000    0.1875; ...
    1.0000    1.0000    0.3125; ...
    1.0000    1.0000    0.4375; ...
    1.0000    1.0000    0.5625; ...
    1.0000    1.0000    0.6875; ...
    1.0000    1.0000    0.8125; ...
    1.0000    1.0000    0.9375];

cmap3 = ...
        [                         0                         0                         0; ...
        0.0158730158730159        0.0158730158730159        0.0158730158730159; ...
        0.0317460317460317        0.0317460317460317        0.0317460317460317; ...
        0.0476190476190476        0.0476190476190476        0.0476190476190476; ...
        0.0634920634920635        0.0634920634920635        0.0634920634920635; ...
        0.0793650793650794        0.0793650793650794        0.0793650793650794; ...
        0.0952380952380952        0.0952380952380952        0.0952380952380952; ...
         0.111111111111111         0.111111111111111         0.111111111111111; ...
         0.126984126984127         0.126984126984127         0.126984126984127; ...
         0.142857142857143         0.142857142857143         0.142857142857143; ...
         0.158730158730159         0.158730158730159         0.158730158730159; ...
         0.174603174603175         0.174603174603175         0.174603174603175; ...
          0.19047619047619          0.19047619047619          0.19047619047619; ...
         0.206349206349206         0.206349206349206         0.206349206349206; ...
         0.222222222222222         0.222222222222222         0.222222222222222; ...
         0.238095238095238         0.238095238095238         0.238095238095238; ...
         0.253968253968254         0.253968253968254         0.253968253968254; ...
          0.26984126984127          0.26984126984127          0.26984126984127; ...
         0.285714285714286         0.285714285714286         0.285714285714286; ...
         0.301587301587302         0.301587301587302         0.301587301587302; ...
         0.317460317460317         0.317460317460317         0.317460317460317; ...
         0.333333333333333         0.333333333333333         0.333333333333333; ...
         0.349206349206349         0.349206349206349         0.349206349206349; ...
         0.365079365079365         0.365079365079365         0.365079365079365; ...
         0.380952380952381         0.380952380952381         0.380952380952381; ...
         0.396825396825397         0.396825396825397         0.396825396825397; ...
         0.412698412698413         0.412698412698413         0.412698412698413; ...
         0.428571428571429         0.428571428571429         0.428571428571429; ...
         0.444444444444444         0.444444444444444         0.444444444444444; ...
          0.46031746031746          0.46031746031746          0.46031746031746; ...
         0.476190476190476         0.476190476190476         0.476190476190476; ...
         0.492063492063492         0.492063492063492         0.492063492063492; ...
         0.507936507936508         0.507936507936508         0.507936507936508; ...
         0.523809523809524         0.523809523809524         0.523809523809524; ...
          0.53968253968254          0.53968253968254          0.53968253968254; ...
         0.555555555555556         0.555555555555556         0.555555555555556; ...
         0.571428571428571         0.571428571428571         0.571428571428571; ...
         0.587301587301587         0.587301587301587         0.587301587301587; ...
         0.603174603174603         0.603174603174603         0.603174603174603; ...
         0.619047619047619         0.619047619047619         0.619047619047619; ...
         0.634920634920635         0.634920634920635         0.634920634920635; ...
         0.650793650793651         0.650793650793651         0.650793650793651; ...
         0.666666666666667         0.666666666666667         0.666666666666667; ...
         0.682539682539683         0.682539682539683         0.682539682539683; ...
         0.698412698412698         0.698412698412698         0.698412698412698; ...
         0.714285714285714         0.714285714285714         0.714285714285714; ...
          0.73015873015873          0.73015873015873          0.73015873015873; ...
         0.746031746031746         0.746031746031746         0.746031746031746; ...
         0.761904761904762         0.761904761904762         0.761904761904762; ...
         0.777777777777778         0.777777777777778         0.777777777777778; ...
         0.793650793650794         0.793650793650794         0.793650793650794; ...
          0.80952380952381          0.80952380952381          0.80952380952381; ...
         0.825396825396825         0.825396825396825         0.825396825396825; ...
         0.841269841269841         0.841269841269841         0.841269841269841; ...
         0.857142857142857         0.857142857142857         0.857142857142857; ...
         0.873015873015873         0.873015873015873         0.873015873015873; ...
         0.888888888888889         0.888888888888889         0.888888888888889; ...
         0.904761904761905         0.904761904761905         0.904761904761905; ...
         0.920634920634921         0.920634920634921         0.920634920634921; ...
         0.936507936507937         0.936507936507937         0.936507936507937; ...
         0.952380952380952         0.952380952380952         0.952380952380952; ...
         0.968253968253968         0.968253968253968         0.968253968253968; ...
         0.984126984126984         0.984126984126984         0.984126984126984; ...
                         1                         1                         1];
 %cmap3=cmap3(end:-1:1, :);
%{

cmap3 = ...
	    [                                  0                         0       0.00520833333333333; ...
        0.0138888888888889        0.0138888888888889        0.0243055555555556; ...
        0.0277777777777778        0.0277777777777778        0.0434027777777778; ...
        0.0416666666666667        0.0416666666666667                    0.0625; ...
        0.0555555555555556        0.0555555555555556        0.0815972222222222; ...
        0.0694444444444444        0.0694444444444444         0.100694444444444; ...
        0.0833333333333333        0.0833333333333333         0.119791666666667; ...
        0.0972222222222222        0.0972222222222222         0.138888888888889; ...
         0.111111111111111         0.111111111111111         0.157986111111111; ...
                     0.125                     0.125         0.177083333333333; ...
         0.138888888888889         0.138888888888889         0.196180555555556; ...
         0.152777777777778         0.152777777777778         0.215277777777778; ...
         0.166666666666667         0.166666666666667                  0.234375; ...
         0.180555555555556         0.180555555555556         0.253472222222222; ...
         0.194444444444444         0.194444444444444         0.272569444444444; ...
         0.208333333333333         0.208333333333333         0.291666666666667; ...
         0.222222222222222         0.222222222222222         0.310763888888889; ...
         0.236111111111111         0.236111111111111         0.329861111111111; ...
                      0.25                      0.25         0.348958333333333; ...
         0.263888888888889         0.263888888888889         0.368055555555556; ...
         0.277777777777778         0.277777777777778         0.387152777777778; ...
         0.291666666666667         0.291666666666667                   0.40625; ...
         0.305555555555556         0.305555555555556         0.425347222222222; ...
         0.319444444444444         0.319444444444444         0.444444444444444; ...
         0.333333333333333         0.338541666666667         0.458333333333333; ...
         0.347222222222222         0.357638888888889         0.472222222222222; ...
         0.361111111111111         0.376736111111111         0.486111111111111; ...
                     0.375         0.395833333333333                       0.5; ...
         0.388888888888889         0.414930555555556         0.513888888888889; ...
         0.402777777777778         0.434027777777778         0.527777777777778; ...
         0.416666666666667                  0.453125         0.541666666666667; ...
         0.430555555555556         0.472222222222222         0.555555555555556; ...
         0.444444444444444         0.491319444444444         0.569444444444444; ...
         0.458333333333333         0.510416666666667         0.583333333333333; ...
         0.472222222222222         0.529513888888889         0.597222222222222; ...
         0.486111111111111         0.548611111111111         0.611111111111111; ...
                       0.5         0.567708333333333                     0.625; ...
         0.513888888888889         0.586805555555556         0.638888888888889; ...
         0.527777777777778         0.605902777777778         0.652777777777778; ...
         0.541666666666667                     0.625         0.666666666666667; ...
         0.555555555555556         0.644097222222222         0.680555555555556; ...
         0.569444444444444         0.663194444444444         0.694444444444444; ...
         0.583333333333333         0.682291666666667         0.708333333333333; ...
         0.597222222222222         0.701388888888889         0.722222222222222; ...
         0.611111111111111         0.720486111111111         0.736111111111111; ...
                     0.625         0.739583333333333                      0.75; ...
         0.638888888888889         0.758680555555555         0.763888888888889; ...
         0.652777777777778         0.777777777777778         0.777777777777778; ...
         0.674479166666667         0.791666666666667         0.791666666666667; ...
         0.696180555555556         0.805555555555556         0.805555555555556; ...
         0.717881944444444         0.819444444444444         0.819444444444444; ...
         0.739583333333333         0.833333333333333         0.833333333333333; ...
         0.761284722222222         0.847222222222222         0.847222222222222; ...
         0.782986111111111         0.861111111111111         0.861111111111111; ...
                 0.8046875                     0.875                     0.875; ...
         0.826388888888889         0.888888888888889         0.888888888888889; ...
         0.848090277777778         0.902777777777778         0.902777777777778; ...
         0.869791666666667         0.916666666666667         0.916666666666667; ...
         0.891493055555555         0.930555555555555         0.930555555555555; ...
         0.913194444444444         0.944444444444444         0.944444444444444; ...
         0.934895833333333         0.958333333333333         0.958333333333333; ...
         0.956597222222222         0.972222222222222         0.972222222222222; ...
         0.978298611111111         0.986111111111111         0.986111111111111; ...
                         1                         1                         1];


 %}
if strcmp(cmap,'jet')
   steps = (31*(map/(1*maxrate)))+1;
   steps = round(steps);
   if steps>32; steps = 32; end
   if steps<1; steps = 1; end
   rgb = cmap1(steps,:);
elseif strcmp(cmap,'gray')
   steps = (63*(map/maxrate))+1;
   steps = round(steps);
   if steps>64; steps = 64; end
   if steps<1; steps = 1; end
   rgb = cmap3(steps,:);
else
   steps = (31*(map/maxrate))+1;
   steps = round(steps);
   if steps>32; steps = 32; end
   if steps<1; steps = 1; end
   rgb = cmap2(steps,:);
end